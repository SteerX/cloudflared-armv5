name: Check for Cloudflared Releases and Build Docker Image

on:
  schedule:
    - cron: '0 0 * * *' # This runs the workflow daily at midnight
  workflow_dispatch: # Allows manual triggering

jobs:
  check_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Check for new cloudflared release
        id: check_release
        run: |
          import requests

          response = requests.get('https://api.github.com/repos/cloudflare/cloudflared/releases/latest')
          latest_version = response.json()['tag_name']

          with open('latest_version.txt', 'r') as f:
              current_version = f.read().strip()

          if latest_version != current_version:
              print(f'::set-output name=new_version::{latest_version}')
              with open('latest_version.txt', 'w') as f:
                  f.write(latest_version)
          else:
              print('No new version found.')

      - name: Set up Docker Buildx
        if: steps.check_release.outputs.new_version
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: steps.check_release.outputs.new_version
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: steps.check_release.outputs.new_version
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            steerx/cloudflared-armv5:${{ steps.check_release.outputs.new_version }}
            steerx/cloudflared-armv5:latest
          build-args: # Correct placement under 'with'
            CLOUDFLARED_VERSION: ${{ steps.check_release.outputs.new_version }}
